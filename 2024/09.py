import sys

fans1, fans2 = 0, 0
def find_empty(fs):
    for i, n in enumerate(fs):
        if n[0] == -1:
            return i;
    return -1

fs = []
fs2 = []
str = sys.stdin.readline().strip()
id = 0
for i in range(len(str)):
    if i%2 == 0:
        fs.append([id, int(str[i])])
        fs2.append([id, int(str[i])])
        id += 1
    else:
        for j in range(int(str[i])):
            fs.append([-1, 1])
        fs2.append([-1, int(str[i])])

#part1
p = find_empty(fs)
while p > 0:
    fs[p][0] = fs[-1][0]
    fs[-1][1] -= 1

    if fs[-1][1] == 0:
        fs.pop()
    p = find_empty(fs)

#part2
'''
[[0, 2], [-1, 3], [1, 3], [-1, 3], [2, 1], [-1, 3], [3, 3], [-1, 1], [4, 2], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 1], [7, 3], [-1, 1], [8, 4], [-1, 0], [9, 2]]
P 0 [9, 2]
[[0, 2], [9, 2], [-1, 1], [1, 3], [-1, 3], [2, 1], [-1, 3], [3, 3], [-1, 1], [4, 2], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 1], [7, 3], [-1, 1], [8, 4], [-1, 2]]
P 1 [8, 4]
[[0, 2], [9, 2], [-1, 1], [1, 3], [-1, 3], [2, 1], [-1, 3], [3, 3], [-1, 1], [4, 2], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 1], [7, 3], [-1, 1], [8, 4], [-1, 2]]
P 2 [-1, 1]
P 3 [7, 3]
[[0, 2], [9, 2], [-1, 1], [1, 3], [7, 3], [-1, 0], [2, 1], [-1, 3], [3, 3], [-1, 1], [4, 2], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 4 [6, 4]
[[0, 2], [9, 2], [-1, 1], [1, 3], [7, 3], [-1, 0], [2, 1], [-1, 3], [3, 3], [-1, 1], [4, 2], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 5 [-1, 1]
P 6 [5, 4]
[[0, 2], [9, 2], [-1, 1], [1, 3], [7, 3], [-1, 0], [2, 1], [-1, 3], [3, 3], [-1, 1], [4, 2], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 7 [-1, 1]
P 8 [4, 2]
[[0, 2], [9, 2], [-1, 1], [1, 3], [7, 3], [-1, 0], [2, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 9 [3, 3]
[[0, 2], [9, 2], [-1, 1], [1, 3], [7, 3], [-1, 0], [2, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 10 [-1, 1]
P 11 [4, 2]
[[0, 2], [9, 2], [-1, 1], [1, 3], [7, 3], [-1, 0], [2, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 12 [2, 1]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 13 [7, 3]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 14 [1, 3]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 15 [-1, 0]
P 16 [2, 1]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 17 [9, 2]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
P 18 [0, 2]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
[[0, 2], [9, 2], [2, 1], [-1, 0], [1, 3], [7, 3], [-1, 1], [4, 2], [-1, 1], [3, 3], [-1, 3], [-1, 1], [5, 4], [-1, 1], [6, 4], [-1, 4], [-1, 1], [8, 4], [-1, 2]]
'''
for ri, n in enumerate(reversed(fs2)):
    #print('P', ri, n)
    if n[0] == -1:
        continue
    for i, m in enumerate(fs2):
        if i >= len(fs2) - 1 - ri:
            break
        if m[0] != -1:
            continue
        if m[1] < n[1]:
            continue

        fs2[i][1] -= n[1]
        fs2.insert(i, n)
        # merge '.' with previous '.' node
        fs2[-ri - 2][1] += n[1]
        fs2.pop(len(fs2) - 1 - ri)
        break
    #print(fs2)
def checksum(fs):
    d = 0
    s = 0
    for i in fs:
        for j in range(i[1]):
            if i[0] != -1:
                s += d * i[0]
            d+= 1
    return s
#print(fs2)

print(checksum(fs), checksum(fs2))
